name: Deploy Job Matcher

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: ${{ github.repository }}
      REGISTRY: ghcr.io
      KUBE_DEPLOYMENT_FILE: kube-deployment.yaml
      NEXT_PUBLIC_BACKEND_API_URL: ${{ secrets.NEXT_PUBLIC_BACKEND_API_URL }}
      NEXT_PUBLIC_BACKEND_API_KEY: ${{ secrets.NEXT_PUBLIC_BACKEND_API_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
          build-args: |
            NEXT_PUBLIC_BACKEND_API_URL=${{ secrets.NEXT_PUBLIC_BACKEND_API_URL }}
            NEXT_PUBLIC_BACKEND_API_KEY=${{ secrets.NEXT_PUBLIC_BACKEND_API_KEY }}

      - name: Check deployment file changes
        id: check-changes
        run: |
          if git diff --quiet HEAD^1 HEAD -- ${{ env.KUBE_DEPLOYMENT_FILE }}; then
            echo "deployment_changed=false" >> $GITHUB_OUTPUT
          else
            echo "deployment_changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Copy kube-deployment.yaml to server
        if: steps.check-changes.outputs.deployment_changed == 'true'
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: kube-deployment.yaml
          target: ~/jobmatcher-deployments/

      - name: Deploy to Kubernetes
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/jobmatcher-deployments
            if [ "${{ steps.check-changes.outputs.deployment_changed }}" = "true" ]; then
              echo "Applying new deployment configuration..."
              kubectl apply -f kube-deployment.yaml
            fi
            echo "Restarting deployment to pull latest image..."
            kubectl rollout restart deployment/job-matcher
